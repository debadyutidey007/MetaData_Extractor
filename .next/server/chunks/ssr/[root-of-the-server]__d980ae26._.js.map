{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/MetaData_Extractor/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/MetaData_Extractor/src/ai/flows/redact-pii.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Redacts Personally Identifiable Information (PII) from metadata.\n *\n * - redactPii - A function that handles the PII redaction process.\n * - RedactPiiInput - The input type for the redactPii function.\n * - RedactPiiOutput - The return type for the redactPii function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst RedactPiiInputSchema = z.object({\n  metadata: z.string().describe('A JSON string of the metadata to redact PII from.'),\n});\nexport type RedactPiiInput = z.infer<typeof RedactPiiInputSchema>;\n\nconst RedactPiiOutputSchema = z\n  .any()\n  .describe(\n    'The metadata with PII redacted, returned as a JSON object. All values should be strings.'\n  );\n\nexport type RedactPiiOutput = Record<string, any>;\n\nexport async function redactPii(input: RedactPiiInput): Promise<RedactPiiOutput> {\n  return redactPiiFlow(input);\n}\n\nconst redactPiiPrompt = ai.definePrompt({\n  name: 'redactPiiPrompt',\n  input: {schema: RedactPiiInputSchema},\n  output: {\n    format: 'json',\n    schema: RedactPiiOutputSchema\n  },\n  prompt: `You are an AI assistant that redacts personally identifiable information (PII) from metadata.\n\n  Given the following metadata JSON string, please redact any PII, such as names, addresses, phone numbers, email addresses, GPS coordinates, and other sensitive information.\n\n  The values in the returned JSON object should all be strings.\n\n  Metadata: {{{metadata}}}\n\n  Return the redacted metadata as a valid JSON object.\n  If a value does not appear to be PII, leave it unredacted.\n`,\n});\n\nconst redactPiiFlow = ai.defineFlow(\n  {\n    name: 'redactPiiFlow',\n    inputSchema: RedactPiiInputSchema,\n    outputSchema: RedactPiiOutputSchema,\n  },\n  async input => {\n    const {output} = await redactPiiPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,uBAAuB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAGA,MAAM,wBAAwB,uIAAA,CAAA,IAAC,CAC5B,GAAG,GACH,QAAQ,CACP;AAKG,eAAe,UAAU,KAAqB;IACnD,OAAO,cAAc;AACvB;AAEA,MAAM,kBAAkB,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IACtC,MAAM;IACN,OAAO;QAAC,QAAQ;IAAoB;IACpC,QAAQ;QACN,QAAQ;QACR,QAAQ;IACV;IACA,QAAQ,CAAC;;;;;;;;;;AAUX,CAAC;AACD;AAEA,MAAM,gBAAgB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACjC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,gBAAgB;IACvC,OAAO;AACT;;;IAjCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/MetaData_Extractor/src/app/actions.ts"],"sourcesContent":["'use server';\n\nimport { redactPii } from '@/ai/flows/redact-pii';\n\nexport async function processFile(\n  metadata: Record<string, any>\n): Promise<{ original: Record<string, any>; redacted: Record<string, any> }> {\n  try {\n    const redacted = await redactPii({ metadata: JSON.stringify(metadata) });\n\n    return { original: metadata, redacted };\n  } catch (error) {\n    console.error('Error processing file:', error);\n    const errorMessage = error instanceof Error ? error.message : \"An unknown server error occurred during processing.\";\n    const errorResult = { fileName: metadata.fileName, error: errorMessage };\n    return {\n      original: errorResult,\n      redacted: errorResult,\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe,YACpB,QAA6B;IAE7B,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,mIAAA,CAAA,YAAS,AAAD,EAAE;YAAE,UAAU,KAAK,SAAS,CAAC;QAAU;QAEtE,OAAO;YAAE,UAAU;YAAU;QAAS;IACxC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAC9D,MAAM,cAAc;YAAE,UAAU,SAAS,QAAQ;YAAE,OAAO;QAAa;QACvE,OAAO;YACL,UAAU;YACV,UAAU;QACZ;IACF;AACF;;;IAhBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/MetaData_Extractor/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {processFile as '406f56a31e68d2d5fbbdeaf94bcfa932a1fa6c84a6'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 389, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/MetaData_Extractor/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/debad/Desktop/MetaData_Extractor/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}